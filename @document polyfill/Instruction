Thanks to JavaScript, we get "head" elements on each web page with the attributes:
- "Data-at-document-domain"
whose value is the full name of the domain under which the document is located in which the script is running,
and
"Data-at-document-url"
which contains the URL of the document.
---------------------------------------------------------------------------------------------------------------------
General idea of how this polyfill works:

The @document rule is only supported in firefox, while the attribute selector:
(https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors) is widely supported.
You can use attribute selectors on attributes created by the script.

Then use Descendant combinator (space): (https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator)
to indicate that the item you are looking for is contained in an "html" element with the appropriate attribute values,
i.e. it is simply on the page that has the desired address or is on the desired domain.

Only now can you use the right selector of any level of complexity, referring to a particular page element,
e.g. each visited link ("a:visited" selector).
---------------------------------------------------------------------------------------------------------------------
*Replacing function url():

'html[data-at-document-url="addressUrl"] '
where:
addressUrl - address URL

In other words:

'html[data-at-document-url="addressUrl"] ' - matches an exact URL.


Attention!!!
A space after the selector is necessary because this is Descendant combinator!!!


Example:
use 'html[data-at-document-url="https://developer.mozilla.org/en-US/docs/Web/CSS/@document"] ' 
instead of: 'url("https://developer.mozilla.org/en-US/docs/Web/CSS/@document")'


The following selector disables the display of all links (anchors) only on the page:
https://developer.mozilla.org/en-US/docs/Web/CSS/@document

html[data-at-document-url="https://developer.mozilla.org/en-US/docs/Web/CSS/@document"] a{display:none}
---------------------------------------------------------------------------------------------------------------------
*Replacing function url-prefix():

'html[data-at-document-url^="addressPrefix"] '
where:
addressPrefix - address prefix

In other words:
'html[data-at-document-url^="addressPrefix"] ' - matches if the document URL starts with the value provided.


Attention!!!
A space after the selector is necessary because this is Descendant combinator!!!


Example:
use 'html[data-at-document-url^="https://developer.mozilla.org/en-US/docs/Web"] ' 
instead of: 'url-prefix("https://developer.mozilla.org/en-US/docs/Web")'


The following selector disables the display of all links (anchors) on all pages whose URL begins with: 
https://developer.mozilla.org/en-US/docs/Web

html[data-at-document-url^="https://developer.mozilla.org/en-US/docs/Web"] a{display:none}
---------------------------------------------------------------------------------------------------------------------
*Replacing function domain():

'html[data-at-document-domain|="domainSpecialString"] '
where:
domainSpecialString - A special string specifying the desired domain as follows:
                      you should write domains in the order according to their hierarchy, including the top-level domain,
                      i.e. in reverse order of their occurrence in the address, and each of them should be separated by a hyphen
                      If the hyphen (-) is part of the domain name, replace it with "^".
example:
org                   - matches all top-level "org" domains and all subdomains thereof
org-mozilla           - matches all pages in the "mozilla.org" domain and all its subdomains
org-mozilla-developer - matches all pages in the domain "developer.mozilla.org" and all its subdomains


In other words:
'html[data-at-document-domain|="domainSpecialString"] ' - matches if the document URL is on the domain provided
                                                          (or a subdomain of it).


Attention!!!
A space after the selector is necessary because this is Descendant combinator!!!


Example:
use 'html[data-at-document-domain|="org-mozilla"] ' instead of: 'domain("mozilla.org")'

The following selector disables the display of all links (anchors) on all pages in the mozilla.org domain and all its subdomains:
html[data-at-document-url|="org-mozilla"] a{display:none}
